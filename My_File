@Test
void testGetProducts_SuccessfulFlow_ElseBlock() throws Exception {
    // Arrange
    ProductListCacheModel cacheModel = new ProductListCacheModel();
    cacheModel.setCategory("shoes");

    Map<String, String> filterMap = new HashMap<>();
    QueryParams qp = new QueryParams();
    qp.setSearchType("CATEGORY");

    Map<String, String> sort = new HashMap<>();

    // Mock loyaltyReflecktionsServiceHelper to avoid NPE
    when(loyaltyReflecktionsServiceHelper.getProductListFromCache(any(ProductListCacheModel.class)))
            .thenReturn(null);

    // âœ… Mock bloomreachService to return null for bloomreachResponse
    when(bloomreachService.getBloomreachSearchResults(any(QueryParams.class), any(), anyMap(), anyMap()))
            .thenReturn(null);

    // Mock mapper for safe JSON conversion
    when(mapper.writeValueAsString(any())).thenReturn("{\"status\":\"success\"}");

    // Act
    ResponseEntity<String> response = loyaltyService.getProducts(
            "123",
            servletRequest,
            filterMap,
            qp,
            sort,
            null,
            cacheModel
    );

    // Assert
    assertNotNull(response, "ResponseEntity should not be null");

    // Since bloomreachResponse is mocked to be null,
    // we expect NO_CONTENT or empty body depending on your implementation
    assertEquals(HttpStatus.NO_CONTENT, response.getStatusCode(),
            "Expected HTTP status 204 when bloomreachResponse is null");
    assertNull(response.getBody(), "Expected response body to be null when bloomreachResponse is null");

    // Verify bloomreachService interaction
    verify(bloomreachService, times(1))
            .getBloomreachSearchResults(any(QueryParams.class), any(), anyMap(), anyMap());

    // Verify postToCache is NOT called when bloomreachResponse is null
    verify(loyaltyReflecktionsServiceHelper, never()).postToCache(any(), any(), anyString());
}
