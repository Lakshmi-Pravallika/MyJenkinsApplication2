 @Test
    void testPopulatePriceFacet_withRegularValues() {
        // Arrange
        Facet facet = new Facet();
        facet.setName("price");

        FacetValue fv1 = new FacetValue();
        fv1.setStart("10");
        fv1.setEnd("50");
        fv1.setCount(5L);

        FacetValue fv2 = new FacetValue();
        fv2.setStart("51");
        fv2.setEnd("100");
        fv2.setCount(3L);

        facet.setValue(Arrays.asList(fv1, fv2));

        CategoryProductFacetData facetData = new CategoryProductFacetData();
        Map<String, CategoryProductFacetData> facetMap = new HashMap<>();

        // Act
        ReflectionTestUtils.invokeMethod(
                bloomreachService, // instance
                "populatePriceFacet", // private method name
                facet, facetData, facetMap
        );

        // Assert
        assertNotNull(facetMap.get("price"));
        List<CategoryProductFacetValue> values = facetMap.get("price").getValue();

        assertEquals(2, values.size());
        
        // Validate encoding and label
        String decodedValue = new String(Base64.getDecoder().decode(values.get(0).getValue()));
        assertEquals("[10 TO 50]", decodedValue);

        assertEquals("$10-$50", values.get(0).getLabel());
        assertEquals("$51-$100", values.get(1).getLabel());
    }

