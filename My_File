@Test
void testGetProducts_SuccessfulFlow_ElseBlock() throws Exception {
    QueryParams queryParams = new QueryParams();
    queryParams.setSearchType("NORMAL");

    // Mock cache call to return false so it goes into the ELSE block
    when(loyaltyReflecktionsServiceHelper.getProductListFromCache(any(ProductListCacheModel.class)))
            .thenReturn(false);

    // Mock restTemplate to return valid SearchCategoryResponseData
    ResponseEntity<SearchCategoryResponseData> mockResponseEntity =
            new ResponseEntity<>(responseData, HttpStatus.OK);

    when(restTemplate.exchange(anyString(), eq(HttpMethod.POST), any(HttpEntity.class), eq(SearchCategoryResponseData.class)))
            .thenReturn(mockResponseEntity);

    when(mapper.writeValueAsString(any(SearchCategoryResponseData.class)))
            .thenReturn("{\"facet\":\"value\"}");

    // Act
    ResponseEntity<String> result = loyaltyService.getProducts(
            "searchKey",
            servletRequest,
            filterMap,
            queryParams,
            Optional.empty(),
            productListCacheModel,
            Optional.empty()
    );

    // Assert
    assertNotNull(result);
    assertEquals(HttpStatus.OK, result.getStatusCode());
    assertTrue(result.getBody().contains("facet"));

    // Verify helper and restTemplate interactions
    verify(loyaltyReflecktionsServiceHelper, times(1))
            .getProductListFromCache(any(ProductListCacheModel.class));

    verify(restTemplate, times(1))
            .exchange(anyString(), eq(HttpMethod.POST), any(HttpEntity.class), eq(SearchCategoryResponseData.class));
}
